{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kurs2_2\\\\\\u0422\\u0420\\u041F\\u0418\\\\lab9\\\\lab9\\\\src\\\\components\\\\TodoList.tsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = _ref => {\n  let {\n    todos,\n    toggleTodo\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: todos.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n      ...todo,\n      onClick: () => toggleTodo(todo.id)\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n};\n_c = TodoList;\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n    text: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  toggleTodo: PropTypes.func.isRequired\n};\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","PropTypes","Todo","jsxDEV","_jsxDEV","TodoList","_ref","todos","toggleTodo","children","map","todo","onClick","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","arrayOf","shape","number","isRequired","completed","bool","text","string","func","$RefreshReg$"],"sources":["D:/Kurs2_2/ТРПИ/lab9/lab9/src/components/TodoList.tsx"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Todo from './Todo'\r\nimport TodoItem from \"../interface/TodoItem\"\r\nconst TodoList = ({ todos, toggleTodo } : any) => (\r\n  <ul>\r\n    {todos.map((todo : TodoItem) =>\r\n      <Todo\r\n        key={todo.id}\r\n        {...todo}\r\n        onClick={() => toggleTodo(todo.id)}\r\n      />\r\n    )}\r\n  </ul>\r\n)\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n    text: PropTypes.string.isRequired\r\n  }).isRequired).isRequired,\r\n  toggleTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAGC,IAAA;EAAA,IAAC;IAAEC,KAAK;IAAEC;EAAiB,CAAC,GAAAF,IAAA;EAAA,oBAC3CF,OAAA;IAAAK,QAAA,EACGF,KAAK,CAACG,GAAG,CAAEC,IAAe,iBACzBP,OAAA,CAACF,IAAI;MAAA,GAECS,IAAI;MACRC,OAAO,EAAEA,CAAA,KAAMJ,UAAU,CAACG,IAAI,CAACE,EAAE;IAAE,GAF9BF,IAAI,CAACE,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAGZ;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAAA,CACN;AAAAC,EAAA,GAVKb,QAAQ;AAYdA,QAAQ,CAACc,SAAS,GAAG;EACnBZ,KAAK,EAAEN,SAAS,CAACmB,OAAO,CAACnB,SAAS,CAACoB,KAAK,CAAC;IACvCR,EAAE,EAAEZ,SAAS,CAACqB,MAAM,CAACC,UAAU;IAC/BC,SAAS,EAAEvB,SAAS,CAACwB,IAAI,CAACF,UAAU;IACpCG,IAAI,EAAEzB,SAAS,CAAC0B,MAAM,CAACJ;EACzB,CAAC,CAAC,CAACA,UAAU,CAAC,CAACA,UAAU;EACzBf,UAAU,EAAEP,SAAS,CAAC2B,IAAI,CAACL;AAC7B,CAAC;AAED,eAAelB,QAAQ;AAAA,IAAAa,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}