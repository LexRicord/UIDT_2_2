{"ast":null,"code":"import { connect } from 'react-redux';\nimport { toggleTodo } from '../actions';\nimport TodoList from '../components/TodoList';\nimport { VisibilityFilters } from '../actions';\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n      return todos;\n    case VisibilityFilters.SHOW_COMPLETED:\n      return todos.filter(t => t.completed);\n    case VisibilityFilters.SHOW_ACTIVE:\n      return todos.filter(t => !t.completed);\n    default:\n      throw new Error('Unknown filter: ' + filter);\n  }\n};\nconst mapStateToProps = state => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\n});\nconst mapDispatchToProps = dispatch => ({\n  toggleTodo: id => dispatch(toggleTodo(id))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","map":{"version":3,"names":["connect","toggleTodo","TodoList","VisibilityFilters","getVisibleTodos","todos","filter","SHOW_ALL","SHOW_COMPLETED","t","completed","SHOW_ACTIVE","Error","mapStateToProps","state","visibilityFilter","mapDispatchToProps","dispatch","id"],"sources":["D:/Kurs2_2/ТРПИ/lab9/lab9/src/containers/VisibleTodoList.tsx"],"sourcesContent":["import { connect } from 'react-redux'\r\nimport { toggleTodo } from '../actions'\r\nimport TodoList from '../components/TodoList'\r\nimport { VisibilityFilters } from '../actions'\r\nimport TodoItem from '../interface/TodoItem'\r\n\r\nconst getVisibleTodos = (todos : TodoItem[], filter : any) => {\r\n  switch (filter) {\r\n    case VisibilityFilters.SHOW_ALL:\r\n      return todos\r\n    case VisibilityFilters.SHOW_COMPLETED:\r\n      return todos.filter((t : TodoItem) => t.completed)\r\n    case VisibilityFilters.SHOW_ACTIVE:\r\n      return todos.filter((t : TodoItem) => !t.completed)\r\n    default:\r\n      throw new Error('Unknown filter: ' + filter)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state : any) => ({\r\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch : any) => ({\r\n  toggleTodo: (id : number) => dispatch(toggleTodo(id))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodoList)\r\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,aAAa;AACrC,SAASC,UAAU,QAAQ,YAAY;AACvC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,iBAAiB,QAAQ,YAAY;AAG9C,MAAMC,eAAe,GAAGA,CAACC,KAAkB,EAAEC,MAAY,KAAK;EAC5D,QAAQA,MAAM;IACZ,KAAKH,iBAAiB,CAACI,QAAQ;MAC7B,OAAOF,KAAK;IACd,KAAKF,iBAAiB,CAACK,cAAc;MACnC,OAAOH,KAAK,CAACC,MAAM,CAAEG,CAAY,IAAKA,CAAC,CAACC,SAAS,CAAC;IACpD,KAAKP,iBAAiB,CAACQ,WAAW;MAChC,OAAON,KAAK,CAACC,MAAM,CAAEG,CAAY,IAAK,CAACA,CAAC,CAACC,SAAS,CAAC;IACrD;MACE,MAAM,IAAIE,KAAK,CAAC,kBAAkB,GAAGN,MAAM,CAAC;EAAA;AAElD,CAAC;AAED,MAAMO,eAAe,GAAIC,KAAW,KAAM;EACxCT,KAAK,EAAED,eAAe,CAACU,KAAK,CAACT,KAAK,EAAES,KAAK,CAACC,gBAAgB;AAC5D,CAAC,CAAC;AAEF,MAAMC,kBAAkB,GAAIC,QAAc,KAAM;EAC9ChB,UAAU,EAAGiB,EAAW,IAAKD,QAAQ,CAAChB,UAAU,CAACiB,EAAE,CAAC;AACtD,CAAC,CAAC;AAEF,eAAelB,OAAO,CACpBa,eAAe,EACfG,kBAAkB,CACnB,CAACd,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}